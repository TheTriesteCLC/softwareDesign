<link rel="stylesheet" href="/pages/singUp.css">

<div id="map">
    <div class="leaflet-bottom leaflet-right">
        <button style="background-color: #4557bb; border: none; color: white; padding: 15px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; margin: 20px; border-radius: 40%; pointer-events: auto;" id="my-loc">
            <i class="fa fa-dot-circle-o" aria-hidden="true"></i>
        </button>
    </div>
</div>

<form action="/customer/favorite" method="POST">
    <div style="position: relative;" class="sing-up">
        <div>
            <div class="create-an-account">Adding new favorite place</div>
            <div style="display: flex; align-items: center; justify-content:space-around;">
                <div class="group-61">
                    <label class="name" for="input-lat">Latitude</label>
                    <input class="input" type="text" id="input-lat" name="lat" placeholder="Latitude" style="width: 100px;" required readonly>
                </div>
                <div class="group-61">
                    <label class="name" for="input-long">Longtitude</label>
                    <input class="input" type="text" id="input-long" name="long" placeholder="Longtitudes" style="width: 100px;" required readonly>
                </div>
            </div>
            <div style="display: flex; align-items: center; flex-direction: column">
                <div class="group-61">
                    <label class="name" for="input-name">Name</label>
                    <input class="input" type="text" id="input-name" name="name" placeholder="Enter name for favorite place" required>
                </div>
            </div>
            <div style="display: flex; align-items: center; flex-direction: column">
                <div class="group-61">
                    <label class="name" for="input-end-cabs">Address</label>
                    <input class="input" type="text" id="input-end-cabs" name="end-cabs" placeholder="Drag map to choose destination" required readonly>
                </div>
            </div>
            <button class="sing-up-1 group-33 btnBook"> Add </button>
        </div>
    </div>
</form>

<!-- leaflet js  -->
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script src="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol@0.74.0/dist/L.Control.Locate.min.js" charset="utf-8"></script>

{{!-- Geocoding --}}
<script src="https://cdn.jsdelivr.net/gh/bigdatacloudapi/js-reverse-geocode-client@latest/bigdatacloud_reverse_geocode.min.js" type="text/javascript"></script>

<script>
    let currentPoint = {};
    let favoritePoint = {};

    // Map initialization 
    var map = L.map('map').setView([10.762622, 106.660172], 12);

    /* Initialise Reverse Geocode API Client */
    var reverseGeocoder=new BDCReverseGeocode();
    reverseGeocoder.localityLanguage='vi';

    //osm layer
    var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    });
    osm.addTo(map);

    //L.control.locate().addTo(map);

    L.DomEvent.on(document.getElementById('my-loc'), 'click', function(){
        map.locate({setView: true, maxZoom: 16});
    })

    const currentLocIcon = L.icon({
        iconUrl: 'https://img.icons8.com/fluency/48/map-pin.png',

        iconSize:     [50, 50], // size of the icon
        iconAnchor:   [25, 50], // point of the icon which will correspond to marker's location
        popupAnchor:  [0, -50] // point from which the popup should open relative to the iconAnchor
    });
    const favoreiteLocIcon = L.icon({
        iconUrl: 'https://img.icons8.com/stickers/100/star--v1.png',

        iconSize:     [40, 40], // size of the icon
        iconAnchor:   [20, 28], // point of the icon which will correspond to marker's location
    });

    var centerMarker = new L.marker(map.getCenter(), {icon: favoreiteLocIcon}).addTo(map);

    function onLocationFound(e) {
        var radius = e.accuracy;

        var currentMarker = L.marker(e.latlng, {icon: currentLocIcon}).addTo(map)
            .bindPopup("You are here").openPopup();

        currentPoint = currentMarker._latlng;
        console.log(currentLatlong)
        //L.circle(e.latlng, radius).addTo(map);
    }

    map.on("move", function () {
        centerMarker.setLatLng(map.getCenter());
    });

    map.on("moveend", function() {
        reverseGeocoder.getClientLocation({
            latitude: map.getCenter().lat,
            longitude: map.getCenter().lng
        },function(result) {
            document.getElementById('input-end-cabs').value = `${result.plusCode}, ${result.locality}, ${result.city}, ${result.countryName}`;
            document.getElementById('input-lat').value = result.latitude;
            document.getElementById('input-long').value = result.longitude;
            favoritePoint.latitude = result.latitude       
            favoritePoint.longitude = result.longitude  
        })
    })

    map.on('locationfound', onLocationFound);

    function markCenter(e) {
        var currentMarker = L.marker(map.getCenter()).addTo(map);
    }

</script>