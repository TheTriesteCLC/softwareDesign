<div
  style="background-color: transparent; width: 100%; height: 760.08px; "
>
    <div id="map" style="width: 100%; height: 100%; position: relative; border-top-left-radius: 30px; border-top-right-radius: 30px;">   
		
	</div>
</div>

</div>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>
      
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>
<script>
	const map = L.map('map').setView([47.490, -117.585], 18);
	L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
		maxZoom: 19,
		attribution: 'Â© OpenStreetMap contributors'
	}).addTo(map);

	let socket = io('//localhost:3000');

	socket.on("requestDriver", () => {
		window.location.href = `/driver/confirm`;
	})

	let marker = null;
	let users = JSON.parse('{{{user}}}')

	getLocation();
	setInterval(getLocation, 5000);

	function getLocation() {
		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(showPosition, showError);
		} else {
			alert("Geolocation is not supported by this browser.");
		}
	}

	function drawDriver() {
		return L.icon({
			iconUrl: '/assets/images/car.png',
			iconSize: [40, 40],
			iconAnchor: [20, 20] 
		});
	}

	function showPosition(position) {
		const lat = position.coords.latitude;
		const lng = position.coords.longitude;
		const icon = drawDriver();
		if (marker) {
			map.removeLayer(marker);
		}

		marker = L.marker([lat, lng], {icon: icon}).addTo(map);
		map.setView(new L.LatLng(lat, lng), map.getZoom());
		socket.emit('driverPosition', { id: users._id, position: {latitude: lat, longitude: lng} });
	}

	function showError(error) {
		switch (error.code) {
			case error.PERMISSION_DENIED:
				console.error("User denied the request for Geolocation.");
				break;
			case error.POSITION_UNAVAILABLE:
				console.error("Location information is unavailable.");
				break;
			case error.TIMEOUT:
				console.error("The request to get user location timed out.");
				break;
			case error.UNKNOWN_ERROR:
				console.error("An unknown error occurred.");
				break;
		}
	}

	// handle get position
	function onMapClick(e) {
		const latlng = e.latlng;
		fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latlng.lat}&lon=${latlng.lng}`)
			.then(response => response.json())
			.then(data => {
				console.log(data); // Log the data for inspection
				L.popup()
					.setLatLng(latlng)
					.setContent('Address: ' + (data.display_name || 'Not found'))
					.openOn(map);
			})
			.catch(err => console.error(err));
	}

</script>